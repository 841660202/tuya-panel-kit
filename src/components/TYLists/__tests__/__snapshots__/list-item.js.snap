// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListItem Component basic render 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "minHeight": 96,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
          "paddingHorizontal": 32,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
</View>
`;

exports[`ListItem Component should not update 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "minHeight": 96,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
          "paddingHorizontal": 32,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#22242C",
              "fontSize": 28,
            },
            undefined,
          ]
        }
      >
        No Subtitle
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
</View>
`;

exports[`ListItem Component should render with Action 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "minHeight": 96,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
          "paddingHorizontal": 32,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Component
      </Text>
    </View>
  </View>
</View>
`;

exports[`ListItem Component should render with Action 2`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "minHeight": 96,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
          "paddingHorizontal": 32,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Function
      </Text>
    </View>
  </View>
</View>
`;

exports[`ListItem Component should render with Icon 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "minHeight": 96,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
          "paddingHorizontal": 32,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "justifyContent": "center",
            "marginRight": 24,
          },
          undefined,
        ]
      }
    >
      <Image
        source={1}
      />
    </View>
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
</View>
`;

exports[`ListItem Component should render with Icon 2`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "minHeight": 96,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
          "paddingHorizontal": 32,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "justifyContent": "center",
            "marginRight": 24,
          },
          undefined,
        ]
      }
    >
      <Image
        source={1}
      />
    </View>
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
</View>
`;

exports[`ListItem Component should render with arrow 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "minHeight": 96,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
          "paddingHorizontal": 32,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View>
        <ARTSurfaceView
          style={
            Array [
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                null,
                Object {},
              ],
              Object {
                "height": 16,
                "width": 16,
              },
            ]
          }
        >
          <ARTShape
            d={
              Array [
                0,
                225.63428295,
                804.43206399,
                2,
                302.49898853,
                881.2967695699999,
                2,
                801.9408196300001,
                381.8549384499999,
                2,
                302.4989885300001,
                -117.5868926600001,
                2,
                225.63428295000006,
                -40.7221870800001,
                2,
                648.21140849,
                381.8549384499999,
                2,
                225.63428295000006,
                804.43206399,
                1,
              ]
            }
            fill={
              Array [
                0,
                0.7725490196078432,
                0.803921568627451,
                0.8274509803921568,
                1,
              ]
            }
            opacity={1}
            stroke={
              Array [
                0.7725490196078432,
                0.803921568627451,
                0.8274509803921568,
                1,
              ]
            }
            strokeCap={1}
            strokeDash={
              Array [
                0,
                0,
              ]
            }
            strokeJoin={1}
            strokeWidth={1}
            transform={
              Array [
                0.015625,
                0,
                0,
                -0.015625,
                0,
                14,
              ]
            }
          />
        </ARTSurfaceView>
      </View>
    </View>
  </View>
</View>
`;

exports[`ListItem Component should render with styles 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "height": 64,
      "minHeight": 96,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
          "paddingHorizontal": 32,
        },
        Object {
          "backgroundColor": "red",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          Object {
            "backgroundColor": "blue",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#22242C",
              "fontSize": 28,
            },
            Object {
              "color": "yellow",
            },
          ]
        }
      >
        title
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#A2A3AA",
              "fontSize": 24,
            },
            Object {
              "color": "#000",
            },
          ]
        }
      >
        subTitle
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 48,
          "opacity": 1,
          "width": 48,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View>
        <ARTSurfaceView
          style={
            Array [
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                null,
                Object {},
              ],
              Object {
                "height": 16,
                "width": 16,
              },
            ]
          }
        >
          <ARTShape
            d={
              Array [
                0,
                225.63428295,
                804.43206399,
                2,
                302.49898853,
                881.2967695699999,
                2,
                801.9408196300001,
                381.8549384499999,
                2,
                302.4989885300001,
                -117.5868926600001,
                2,
                225.63428295000006,
                -40.7221870800001,
                2,
                648.21140849,
                381.8549384499999,
                2,
                225.63428295000006,
                804.43206399,
                1,
              ]
            }
            fill={
              Array [
                0,
                0.7725490196078432,
                0.803921568627451,
                0.8274509803921568,
                1,
              ]
            }
            opacity={1}
            stroke={
              Array [
                0.7725490196078432,
                0.803921568627451,
                0.8274509803921568,
                1,
              ]
            }
            strokeCap={1}
            strokeDash={
              Array [
                0,
                0,
              ]
            }
            strokeJoin={1}
            strokeWidth={1}
            transform={
              Array [
                0.015625,
                0,
                0,
                -0.015625,
                0,
                14,
              ]
            }
          />
        </ARTSurfaceView>
      </View>
    </View>
  </View>
</View>
`;

exports[`ListItem Component should render with title and subTitle 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "minHeight": 96,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
          "paddingHorizontal": 32,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#22242C",
              "fontSize": 28,
            },
            undefined,
          ]
        }
      >
        title
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#A2A3AA",
              "fontSize": 24,
            },
            undefined,
          ]
        }
      >
        subTitle
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
</View>
`;

exports[`ListItem Component should update 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "minHeight": 96,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
          "paddingHorizontal": 32,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#22242C",
              "fontSize": 28,
            },
            undefined,
          ]
        }
      >
        Has Subtitle
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#A2A3AA",
              "fontSize": 24,
            },
            undefined,
          ]
        }
      >
        subTitle
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
</View>
`;
